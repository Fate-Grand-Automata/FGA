name: CI

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  build:
    runs-on: macos-latest
    env:
      NOT_FORK: ${{secrets.NOT_FORK == 'true'}}
      FORK: ${{secrets.NOT_FORK != 'true'}}
    steps:
    - uses: actions/checkout@v1

    - name: Package Name
      run: sed -i -e "s/package=\"[^\"]*\"/package=\"com.mathewsachin.fategrandautomata\"/g" AndroidManifest.xml
      working-directory: ./FateGrandAutomata/Properties
      if: env.NOT_FORK == 'true'

    - name: Package Name (Fork PR)
      run: sed -i -e "s/package=\"[^\"]*\"/package=\"com.mathewsachin.fategrandautomata.fork\"/g" AndroidManifest.xml
      working-directory: ./FateGrandAutomata/Properties
      if: env.FORK == 'true'

    - name: Version Number
      working-directory: ./FateGrandAutomata/Properties
      run: |
        sed -i -e "s/android:versionCode=\"[^\"]*\"/android:versionCode=\"$GITHUB_RUN_NUMBER\"/g" AndroidManifest.xml
        sed -i -e "s/android:versionName=\"[^\"]*\"/android:versionName=\"$GITHUB_RUN_NUMBER\"/g" AndroidManifest.xml

    - name: Version Tag
      if: startsWith(github.ref, 'refs/tags/')
      run: sed -i -e "s/android:versionName=\"[^\"]*\"/android:versionName=\"${GITHUB_REF:10}\"/g" AndroidManifest.xml
      working-directory: ./FateGrandAutomata/Properties

    - name: Decrypt keystore (GPG)
      env:
        GPG_KEYSTORE: ${{ secrets.GPG_KEYSTORE }}
      working-directory: ./FateGrandAutomata
      if: env.NOT_FORK == 'true'
      run: gpg --quiet --batch --yes --decrypt --passphrase="$GPG_KEYSTORE" --output fgautomata.keystore fgautomata.keystore.gpg

    - name: Android
      env:
        KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
      working-directory: ./FateGrandAutomata
      if: env.NOT_FORK == 'true'
      run: msbuild FateGrandAutomata.csproj /restore /verbosity:minimal /t:SignAndroidPackage /p:Configuration=Release /p:AndroidKeyStore=True /p:AndroidSigningKeyAlias=fgautomata /p:AndroidSigningStorePass="$KEYSTORE_PASS" /p:AndroidSigningKeyPass="$KEYSTORE_PASS" /p:AndroidSigningKeyStore=fgautomata.keystore

    - name: Android (Fork PR)
      working-directory: ./FateGrandAutomata
      if: env.FORK == 'true'
      run: msbuild FateGrandAutomata.csproj /restore /verbosity:minimal /t:SignAndroidPackage /p:Configuration=Release

    - name: Upload APK
      uses: actions/upload-artifact@v1
      if: env.NOT_FORK == 'true'
      with:
        name: apk
        path: FateGrandAutomata/bin/Release/com.mathewsachin.fategrandautomata-Signed.apk

    - name: Upload APK (Fork PR)
      uses: actions/upload-artifact@v1
      if: env.FORK == 'true'
      with:
        name: apk
        path: FateGrandAutomata/bin/Release/com.mathewsachin.fategrandautomata.fork-Signed.apk

  deploy:
    needs: build
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Set tag env var
      run: echo ::set-env name=TAG_VERSION::${GITHUB_REF:10}

    - name: Draft Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_VERSION }}
        release_name: 'Fate/Grand Automata ${{ env.TAG_VERSION }}'
        draft: true
        prerelease: true

    - name: Download Artifact
      uses: actions/download-artifact@v1
      with:
        name: apk

    - name: Upload APK to GitHub Releases
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./apk/com.mathewsachin.fategrandautomata-Signed.apk
        asset_name: com.mathewsachin.fategrandautomata.apk
        asset_content_type: application/vnd.android.package-archive
